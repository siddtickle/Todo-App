{"version":3,"sources":["components/TodoItem.js","components/TodoForm.js","components/NoteItem.js","components/NoteForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","index","item","moveUp","moveDown","markComplete","removeTodo","editTodo","useState","editInput","setEditInput","editable","setEditable","style","display","justifyContent","width","marginLeft","marginRight","paddingBottom","alignItems","ButtonGroup","orientation","Button","onClick","TextField","margin","borderColor","value","helperText","fullWidth","onChange","event","target","TodoForm","input","setInput","todoItems","setTodoItems","length","tempArr","temp","splice","placeholder","variant","multiline","console","log","map","val","NoteItem","noteItems","setNoteItems","App","NoteForm","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.260b8fe9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ButtonGroup, Button, TextField } from \"@material-ui/core\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction TodoItem({\n  index,\n  item,\n  moveUp,\n  moveDown,\n  markComplete,\n  removeTodo,\n  editTodo,\n}) {\n  //let isEdit = false;\n\n  const [editInput, setEditInput] = useState(\"\");\n\n  const formChanged = (event) => {\n    setEditInput(event.target.value);\n  };\n\n  const [editable, setEditable] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: 800,\n        //border: \"4px dotted red\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingBottom: 15,\n        alignItems: \"center\",\n      }}\n    >\n      <ButtonGroup orientation=\"vertical\">\n        <Button onClick={() => moveUp(index)}>\n          <ArrowUpwardIcon />\n        </Button>\n        <Button onClick={() => moveDown(index)}>\n          <ArrowDownwardIcon />\n        </Button>\n      </ButtonGroup>\n      <Button>\n        <CheckIcon onClick={() => markComplete(index)} />\n      </Button>\n\n      {!editable && <h2 style={{ width: \"100% \" }}>{item}</h2>}\n      {editable && (\n        <TextField\n          style={{\n            margin: 8,\n            borderColor: \"transparent !important\",\n          }}\n          value={editInput}\n          helperText=\"Type to edit, click the pencil you're done!\"\n          fullWidth\n          margin=\"normal\"\n          onChange={formChanged}\n          //variant=\"outlined\"\n        />\n      )}\n\n      <ButtonGroup>\n        <Button\n          onClick={() => {\n            if (editInput) {\n              editTodo(index, editInput);\n              setEditInput(\"\");\n            }\n            setEditable(!editable);\n          }}\n        >\n          <EditIcon />\n        </Button>\n        <Button\n          onClick={() => {\n            removeTodo(index);\n          }}\n        >\n          <DeleteIcon />\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default TodoItem;\n","import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport TodoItem from \"./TodoItem\";\n\nfunction TodoForm() {\n  const [input, setInput] = useState(\"\");\n  const [todoItems, setTodoItems] = useState([]);\n\n  const moveUp = (index) => {\n    if (index !== 0 && todoItems.length > 1) {\n      const tempArr = [...todoItems];\n      let temp = tempArr[index - 1];\n      tempArr[index - 1] = tempArr[index];\n      tempArr[index] = temp;\n      setTodoItems(tempArr);\n    }\n  };\n\n  const moveDown = (index) => {\n    if (index !== todoItems.length - 1 && todoItems.length > 1) {\n      const tempArr = [...todoItems];\n      let temp = tempArr[index + 1];\n      tempArr[index + 1] = tempArr[index];\n      tempArr[index] = temp;\n      setTodoItems(tempArr);\n    }\n  };\n\n  const removeTodo = (index) => {\n    const tempArr = [...todoItems];\n    tempArr.splice(index, 1);\n    setTodoItems(tempArr);\n  };\n\n  const editTodo = (index, value) => {\n    const tempArr = [...todoItems];\n    tempArr[index] = value;\n    setTodoItems(tempArr);\n  };\n\n  const markComplete = (index) => {\n    const tempArr = [...todoItems];\n    //tempArr[index] = tempArr[index].strike();\n    tempArr[index] = \"Done!\";\n    setTodoItems(tempArr);\n  };\n\n  const formChanged = (event) => {\n    setInput(event.target.value);\n  };\n\n  //adding item to an array\n  //https://stackoverflow.com/questions/54676966/push-method-in-react-hooks-usestate\n  const addToList = () => {\n    if (input) {\n      setTodoItems([...todoItems, input]);\n      console.log(todoItems);\n      setInput(\"\");\n    }\n  };\n\n  return (\n    <div\n    //   style={{\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     width: 800,\n    //     border: \"4px dotted red\",\n    //     marginLeft: \"auto\",\n    //     marginRight: \"auto\",\n    //     paddingTop: 15,\n    //     paddingBottom: 15,\n    //     position: \"sticky\",\n    //   }}\n    >\n      <div style={{ display: \"flex\" }}>\n        <TextField\n          placeholder=\"enter a todo list item\"\n          variant=\"outlined\"\n          multiline={true}\n          value={input}\n          // type=\"text\"\n          fullWidth\n          onChange={formChanged}\n          //when press enter -> do some function\n          //Credit: https://stackoverflow.com/questions/43384039/how-to-get-input-textfield-values-when-enter-key-is-pressed-in-react-js\n          //   onKeyPress={(ev) => {\n          //     console.log(`Pressed keyCode ${ev.key}`);\n          //     if (ev.key === \"Enter\") {\n          //       // Do code here\n          //       console.log(\"ENTER key pressed\");\n          //       ev.preventDefault();\n          //     }\n          //   }}\n        />\n        {/* <div\n        style={{\n          display: \"flex\",\n          alignContent: \"center\",\n          border: \"4px dotted red\",\n        }}\n      > */}\n        <Button variant=\"contained\" onClick={addToList}>\n          Add Todo Item\n        </Button>\n      </div>\n      {/* </div> */}\n      <div>\n        {todoItems.map((val, index) => {\n          return (\n            <TodoItem\n              index={index}\n              item={val}\n              moveUp={moveUp}\n              moveDown={moveDown}\n              markComplete={markComplete}\n              removeTodo={removeTodo}\n              editTodo={editTodo}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport { ButtonGroup, Button, TextField } from \"@material-ui/core\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction NoteItem({ index, item, moveUp, moveDown, removeTodo, editTodo }) {\n  //let isEdit = false;\n\n  const [editInput, setEditInput] = useState(\"\");\n\n  const formChanged = (event) => {\n    setEditInput(event.target.value);\n  };\n\n  const [editable, setEditable] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: 800,\n        //border: \"4px dotted red\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingBottom: 15,\n        alignItems: \"center\",\n        // background: \"rgb(240,240,240)\",\n        // boxShadow: \"5px 5px 10px 2px rgba(0,0,0,.1)\",\n      }}\n    >\n      <ButtonGroup orientation=\"vertical\">\n        <Button onClick={() => moveUp(index)}>\n          <ArrowUpwardIcon />\n        </Button>\n        <Button onClick={() => moveDown(index)}>\n          <ArrowDownwardIcon />\n        </Button>\n      </ButtonGroup>\n\n      {!editable && <h4 style={{ width: \"100% \" }}>{item}</h4>}\n      {editable && (\n        <TextField\n          style={{\n            margin: 8,\n            borderColor: \"transparent !important\",\n          }}\n          value={editInput}\n          helperText=\"Type to edit, click the pencil you're done!\"\n          fullWidth\n          margin=\"normal\"\n          onChange={formChanged}\n          //variant=\"outlined\"\n        />\n      )}\n\n      <ButtonGroup>\n        <Button\n          onClick={() => {\n            if (editInput) {\n              editTodo(1, index, editInput);\n              setEditInput(\"\");\n            }\n            setEditable(!editable);\n          }}\n        >\n          <EditIcon />\n        </Button>\n        <Button\n          onClick={() => {\n            removeTodo(index);\n          }}\n        >\n          <DeleteIcon />\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default NoteItem;\n","import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport NoteItem from \"./NoteItem\";\n\nfunction TodoForm() {\n  const [input, setInput] = useState(\"\");\n  const [noteItems, setNoteItems] = useState([]);\n\n  const moveUp = (index) => {\n    if (index !== 0 && noteItems.length > 1) {\n      const tempArr = [...noteItems];\n      let temp = tempArr[index - 1];\n      tempArr[index - 1] = tempArr[index];\n      tempArr[index] = temp;\n      setNoteItems(tempArr);\n    }\n  };\n\n  const moveDown = (index) => {\n    if (index !== noteItems.length - 1 && noteItems.length > 1) {\n      const tempArr = [...noteItems];\n      let temp = tempArr[index + 1];\n      tempArr[index + 1] = tempArr[index];\n      tempArr[index] = temp;\n      setNoteItems(tempArr);\n    }\n  };\n\n  const removeTodo = (index) => {\n    const tempArr = [...noteItems];\n    tempArr.splice(index, 1);\n    setNoteItems(tempArr);\n  };\n\n  const editTodo = (index, value) => {\n    const tempArr = [...noteItems];\n    tempArr[index] = value;\n    setNoteItems(tempArr);\n  };\n\n  const formChanged = (event) => {\n    setInput(event.target.value);\n  };\n\n  //adding item to an array\n  //https://stackoverflow.com/questions/54676966/push-method-in-react-hooks-usestate\n  const addToList = () => {\n    if (input) {\n      setNoteItems([...noteItems, input]);\n      console.log(noteItems);\n      setInput(\"\");\n    }\n  };\n\n  return (\n    <div\n    //   style={{\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     width: 800,\n    //     border: \"4px dotted red\",\n    //     marginLeft: \"auto\",\n    //     marginRight: \"auto\",\n    //     paddingTop: 15,\n    //     paddingBottom: 15,\n    //     position: \"sticky\",\n    //   }}\n    >\n      <div style={{ display: \"flex\" }}>\n        <TextField\n          placeholder=\"enter a note\"\n          variant=\"outlined\"\n          multiline={true}\n          value={input}\n          // type=\"text\"\n          style={{ width: \"100%\" }}\n          onChange={formChanged}\n          //when press enter -> do some function\n          //Credit: https://stackoverflow.com/questions/43384039/how-to-get-input-textfield-values-when-enter-key-is-pressed-in-react-js\n          //   onKeyPress={(ev) => {\n          //     console.log(`Pressed keyCode ${ev.key}`);\n          //     if (ev.key === \"Enter\") {\n          //       // Do code here\n          //       console.log(\"ENTER key pressed\");\n          //       ev.preventDefault();\n          //     }\n          //   }}\n        />\n        {/* <div\n        style={{\n          display: \"flex\",\n          alignContent: \"center\",\n          border: \"4px dotted red\",\n        }}\n      > */}\n        <Button variant=\"contained\" onClick={addToList}>\n          Add Note\n        </Button>\n      </div>\n      {/* </div> */}\n      <div>\n        {noteItems.map((val, index) => {\n          return (\n            <NoteItem\n              index={index}\n              item={val}\n              moveUp={moveUp}\n              moveDown={moveDown}\n              removeTodo={removeTodo}\n              editTodo={editTodo}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport NoteForm from \"./components/NoteForm\";\n\nfunction App() {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <TodoForm />\n      <NoteForm\n        style={{\n          border: \"4px dotted red\",\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}